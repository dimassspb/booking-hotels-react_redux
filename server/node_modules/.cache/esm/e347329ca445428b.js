let express,readdirSync,cors,path,mongoose,config;_a44‍.w("express",[["default",["express"],function(v){express=v}]]);_a44‍.w("fs",[["readdirSync",["readdirSync"],function(v){readdirSync=v}]]);_a44‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_a44‍.w("path",[["default",["path"],function(v){path=v}]]);_a44‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_a44‍.w("config",[["default",["config"],function(v){config=v}]]);





const morgan = require("morgan");
require("dotenv").config();

const app = express();

// db connection
mongoose
    .connect(config.get("DATABASE"), {
        useNewUrlParser: true,
        useFindAndModify: false,
        useUnifiedTopology: true,
        useCreateIndex: true,
    })
    .then(() => console.log("DB Connected"))
    .catch((err) => _a44‍.g.console.log("DB Connection Error: ", err));

// middlewares
app.use(cors());
app.use(morgan("dev"));
app.use(express.json()); //

// route middleware
readdirSync("./routes").map((r) => app.use("/api", require(`./routes/${r}`)));

// const port = process.env.PORT || 8000;
const PORT = config.get("PORT") || 8000;


    app.use("/", express.static(path.join(__dirname, "client")));

    const indexPath = path.join(__dirname, "client", "index.html");

    app.get('*', (req, res) => {
        res.sendFile(indexPath)
    })


app.listen(PORT, () => console.log(`Server is running on port ${PORT}`));
